{"version":3,"sources":["API_Interface/API_Interface.js","Login.js","Components/Accounts/Accounts.js","Components/Characters/Characters.js","Components/RaidTeams/RaidTeams.js","Components/Markets/Markets.js","Components/Transactions/Transactions.js","Components/SummaryPage/Summary.js","menu/MenuPresentationComponents.js","menu/MainDrawer.js","App.js","Signup.js","Main.js","reportWebVitals.js","index.js"],"names":["axiosAgent","axios","defaults","headers","common","baseURL","withCredentials","APIInterface","getUserInfo","email","password","console","log","JSON","stringify","post","checkUserEmail","get","concat","insertNewUser","userName","insertCharacter","then","response","data","catch","error","character","undefined","allCharacters","deleteCharacter","characterName","delete","encodeURIComponent","allAccounts","accountWithEmail","allRaidTeams","addPlayerToRaid","raidteam_id","character_id","defaultTheme","createTheme","Login","_ref","setUser","setSignupMode","setEmail","useState","setPassword","authFailed","setAuthFailed","verifyUser","setVerifyUser","useEffect","api","API","async","userInfo","user","status","_jsx","ThemeProvider","theme","children","_jsxs","Grid","container","component","sx","height","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","noValidate","mt","TextField","label","fullWidth","value","onChange","e","target","margin","helperText","type","p","FormControlLabel","control","Checkbox","color","Button","mb","onClick","handleLogin","length","marginLeft","handleSignup","accountsTableAttributes","title","attributeDBName","align","NameInputComponent","userInput","setUserInput","accounts","setAccounts","accountsJSONString","getAccounts","TRow","accountObject","TableRow","border","map","attr","idx","TableCell","Fragment","TableContainer","Table","minWidth","TableHead","TableBody","account","characterTableAttributes","isEditing","setIsEditing","name","setName","characters","setCharacters","fetchCharacters","intervalId","setInterval","clearInterval","handleAddName","characterData","index","src","alt","style","width","encodedName","Error","filter","char","handleDelete","onBlur","onKeyPress","key","IconButton","size","fontSize","AddIcon","raidteamsTableAttributes","RaidTeamsComponent","raidteams","setRaidTeams","raidteamsJSONString","getRaidTeams","raidteamObject","justifyContent","id","placeholder","fullwidth","event","Divider","raidteam","Markets","props","Transactions","Summary","BarChart","series","xAxis","scaleType","top","bottom","left","right","presentationComponents","RaidTeams","Accounts","Characters","drawerWidth","Main","styled","shouldForwardProp","prop","open","flexGrow","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","AppBar","MuiAppBar","_ref2","DrawerHeader","_ref3","mixins","toolbar","TopBar","_ref4","handleDrawerOpen","logoutAction","position","Toolbar","edge","mr","MenuIcon","noWrap","flex","PresentationListItems","menuItemTitles","ListItem","button","ListItemText","primary","selectedItem","ListItemIcon","ChevronRightIcon","findSelectedComponent","comp","MainDraswer","_ref5","useTheme","setOpen","React","setSelectedItem","Drawer","flexShrink","boxSizing","anchor","handleDrawerClose","direction","ChevronLeftIcon","List","makeUserName","App","MainDrawer","SignUp","setUserName","exist","setExist","userCheck","setUserCheck","window","alert","Container","maxWidth","marginTop","required","u","autoComplete","handleSubmit","Link","handleSignin","signupMode","logout","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9777cb0.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst AxiosConfigured = () => {\n    // Indicate to the API that all requests for this app are AJAX\n    axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n    // Set the baseURL for all requests to the API domain instead of the current domain\n    // axios.defaults.baseURL = `http://localhost:8443/api/v1`;\n    axios.defaults.baseURL = `http://localhost:8443/api/v1`;\n\n\n    // Allow the browser to send cookies to the API domain (which include auth_token)\n    axios.defaults.withCredentials = true;\n\n\n//    axios.defaults.headers.common['X-CSRF-TOKEN'] = csrf_token;\n\n    return axios;\n};\n\n\nconst axiosAgent = AxiosConfigured();\n\nexport default class APIInterface {\n\n    //Login\n\n    async getUserInfo(email, password) {\n        console.log(JSON.stringify(email));\n        console.log(JSON.stringify(password));\n        return axiosAgent.post(`/login/`, {email, password});\n    }\n\n    //Signup\n\n    async checkUserEmail(email) {\n        return axiosAgent.get(`/signup/${email}`);\n    }\n\n    async insertNewUser(userName, email, password) {\n        console.log(JSON.stringify(email));\n        console.log(JSON.stringify(password));\n        return axiosAgent.post(`/signup/`, {email, password, userName});\n    }\n\n    //Characters\n\n    async insertCharacter(userName) {\n        return axiosAgent.post(`/characters/insert`, { userName })\n            .then(response => response.data)\n            .catch(error => ({\n                error,\n                character: undefined\n            }));\n    }\n    async allCharacters() {\n        return axiosAgent.get(`characters/all-characters`);\n\n    }\n\n    async deleteCharacter(characterName) {\n        return axios.delete(`/characters/delete/${encodeURIComponent(characterName)}`);\n    }\n\n    //Accounts\n\n    async allAccounts() {\n        return axiosAgent.get(`accounts/all-accounts`);\n    }\n\n    async accountWithEmail(email) {\n        return axiosAgent.get(`accounts/${email}`);\n    }\n\n\n    //Raid Teams\n\n    async allRaidTeams() {\n        return axiosAgent.get(`raidteams/all-raidteams`);\n    }\n\n    async addPlayerToRaid(raidteam_id, character_id) {\n        return axiosAgent.get(`raidteams/${raidteam_id}/${character_id}`);\n    }\n\n}","import React, { useState, useEffect } from \"react\";\nimport API from \"./API_Interface/API_Interface\";\nimport {\n  Avatar, Box, Button, Checkbox, CssBaseline, Divider, FormControlLabel,\n  Grid, Link, Paper, TextField, Typography, createTheme, ThemeProvider\n} from \"@mui/material\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\n\nconst defaultTheme = createTheme();\n\nexport default function Login({ setUser, setSignupMode}) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [authFailed, setAuthFailed] = useState(false);\n  const [verifyUser, setVerifyUser] = useState(false);\n  //const [newUser, setNewUser] = useState(false);\n \n  const handleLogin = () => {\n    console.log(\"handleLogin called.\");\n    if (email.length === 0 || password.length === 0) {\n      setAuthFailed(true);\n    } else {\n      setAuthFailed(false);\n      setVerifyUser(true);  // Move user verification flag here\n    }\n  };\n\n  const handleSignup = () => {\n    console.log(\"handleSignup called.\");\n    setSignupMode(true); // Toggle signup mode to true\n  };\n\n\n  useEffect(() => {\n    if (!verifyUser) return;\n\n    const api = new API();\n    async function getUserInfo() {\n        api.getUserInfo(email, password)\n        .then( userInfo => {\n        console.log(`API returns user info and it is: ${JSON.stringify(userInfo)}`);\n        const user = userInfo.data.user;\n        console.log(\"BELOW IS USER\");\n        console.log(user);\n        if (userInfo.data.status === \"OK\") {\n          console.log(\"SETTING USER to USER\");\n          setUser(user);\n        } else {\n          setVerifyUser(false);\n          setAuthFailed(true);\n        }\n      });\n    }\n    getUserInfo();\n  }, [verifyUser, email, password, setUser]); // Ensure dependencies are correctly listed\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} sx={{\n          backgroundImage: \"url(https://wallpapers.com/images/hd/world-of-warcraft-restoration-druid-healing-69ucodb01a3oyfab.webp)\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box sx={{ \n            my: 8, mx: 4, display: \"flex\", flexDirection: \"column\", alignItems: \"center\"\n          }}>\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box component=\"form\" noValidate sx={{ mt: 1}}>\n              <TextField\n                error={authFailed}\n                label=\"Email\"\n                fullWidth\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                margin=\"normal\"\n                helperText={authFailed ? \"Invalid email or password\" : \"\"}\n              />\n              <TextField\n                error={authFailed}\n                label=\"Password\"\n                type=\"password\"\n                fullWidth\n                value={password}\n                onChange={(p) => setPassword(p.target.value)}\n                margin=\"normal\"\n                helperText={authFailed ? \"Invalid email or password\" : \"\"}\n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                onClick={handleLogin}\n              >\n                Sign In\n              </Button>\n              \n                \n                <Button\n                  variant=\"contained\"\n                  sx={{ mt: 3, mb: 2, marginLeft: 1 }} // Added marginLeft to create space between the Typography and Button\n                  onClick={handleSignup}\n                >\n                  Sign up here.\n                </Button>\n              \n\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","import React, {useState, useEffect, Fragment} from 'react';\r\nimport API from '../../API_Interface/API_Interface'\r\n\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n//import TextField from '@mui/material/TextField';\r\n//import Button from '@mui/material/Button';\r\n//import Box from '@mui/material/Box';\r\n//import Divider from '@mui/material/Divider';\r\n//import Avatar from '@mui/material/Avatar';\r\n//import CssBaseline from '@mui/material/CssBaseline';\r\n//import FormControlLabel from '@mui/material/FormControlLabel';\r\n//import Checkbox from '@mui/material/Checkbox';\r\n//import Link from '@mui/material/Link';\r\n//import Grid from '@mui/material/Grid';\r\n//import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\n//import { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\n\r\n\r\nconst accountsTableAttributes = [\r\n    {\r\n        title: 'Email',\r\n        attributeDBName: 'email',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'User Name',\r\n        attributeDBName: 'userName',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Account ID',\r\n        attributeDBName: 'account_id',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Role',\r\n        attributeDBName: 'role',\r\n        align: 'left'\r\n    },\r\n]; \r\n\r\nexport default function NameInputComponent() {\r\n\r\n//START display of characters in database\r\n\r\n    const [userInput, setUserInput] = useState('');\r\n    const [verifyUser, setVerifyUser] = useState(false);\r\n    const [authFailed, setAuthFailed] = useState(false);\r\n    const [user, setUser] = useState(undefined);\r\n\r\n    const handleInputChange = event => {\r\n        console.log(\"handleInputChange called.\");\r\n\r\n        setUserInput(event.target.value);\r\n        setAuthFailed(false);\r\n\r\n        if(event.key === \"Sign In\") {\r\n            console.log(\"handleKeyPress: Verify user input.\");\r\n            setVerifyUser(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n \r\n        if( ! verifyUser || userInput.length === 0)\r\n            return;\r\n\r\n        const api = new API();\r\n        async function getUserInfo() {\r\n            api.getUserInfo(userInput)\r\n                .then( userInfo => {\r\n                console.log(`api returns user info and it is: ${JSON.stringify(userInfo)}`);\r\n                const user = userInfo.user;\r\n                if( userInfo.status === \"OK\" ) {\r\n                    setUser(user);\r\n                } else  {\r\n                    setVerifyUser(false);\r\n                    setAuthFailed(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        getUserInfo();\r\n    }, [verifyUser, setUser, userInput]);\r\n\r\n    const [accounts, setAccounts] = useState([]);\r\n    console.log(`in AccountTable accounts contains is ${JSON.stringify(accounts)}`);\r\n\r\n\r\n    useEffect(() => {\r\n        const api = new API();\r\n\r\n        async function getAccounts() {\r\n            const accountsJSONString = await api.allAccounts();\r\n            console.log(`accounts from the DB ${JSON.stringify(accountsJSONString)}`);\r\n            setAccounts(accountsJSONString.data);\r\n        }\r\n\r\n        getAccounts();\r\n    }, []);\r\n    \r\n    const TRow = ({accountObject, onClick}) => {\r\n        return <TableRow\r\n            sx={{'&:last-child td, &:last-child th': {border: 0}}}\r\n        >\r\n            {\r\n                accountsTableAttributes.map((attr, idx) =>\r\n                    <TableCell key={idx} onClick={() => onClick(accountObject)}\r\n                               align={attr.align}>\r\n                        {\r\n                            accountObject[attr.attributeDBName]\r\n                        }\r\n                    </TableCell>)\r\n            }\r\n        </TableRow>\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n            Here is a list of all your characters that reside in your account.\r\n            </Typography> \r\n        {\r\n            accounts.length > 0 &&\r\n                <TableContainer component={Paper}>\r\n                    <Table sx={{minWidth: 650}} aria-label=\"account table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {\r\n                                    accountsTableAttributes.map((attr, idx) =>\r\n                                        <TableCell  key={idx}\r\n                                                    align={attr.align}>\r\n                                            {attr.title}\r\n                                        </TableCell>)\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                accounts.map((account, idx) => (\r\n                                    <TRow accountObject={account} key={idx}/>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n        }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport API from '../../API_Interface/API_Interface'; // Ensure this path is correct\r\nimport { Box, TextField, IconButton, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst characterTableAttributes = [\r\n    {\r\n        title: 'Image',\r\n        attributeDBName: 'imagePath',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Name',\r\n        attributeDBName: 'name',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Race',\r\n        attributeDBName: 'race',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Class',\r\n        attributeDBName: 'class',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Item Level',\r\n        attributeDBName: 'gearScore',\r\n        align: 'left'\r\n    },\r\n];\r\n\r\nfunction NameInputComponent() {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [characters, setCharacters] = useState([]);\r\n    const api = new API();\r\n\r\n    useEffect(() => {\r\n        const fetchCharacters = async () => {\r\n            const response = await api.allCharacters();\r\n\r\n            if (response.data) {\r\n                setCharacters(response.data);\r\n            }\r\n        };\r\n\r\n        fetchCharacters();  // Initial fetch\r\n        const intervalId = setInterval(fetchCharacters, 5000);  // Fetch every 5000 ms (5 seconds)\r\n\r\n        return () => clearInterval(intervalId);  // Clear interval on component unmount\r\n    }, []);\r\n\r\n    const handleAddName = async () => {\r\n        if (name) {\r\n            try {\r\n                const characterData = await api.insertCharacter(name);\r\n                console.log(characterData);\r\n                if (characterData.error) {\r\n                    throw characterData.error;\r\n                }\r\n                setCharacters([...characters, characterData]);\r\n                setName('');\r\n                setIsEditing(false);\r\n            } catch (error) {\r\n                console.error('API call failed:', error);\r\n            }\r\n        }\r\n    };\r\n    const handleDelete = async (characterName) => {\r\n        try {\r\n            const encodedName = characterName;\r\n            const response = await api.deleteCharacter(encodedName);\r\n            if (response.status === 200) {\r\n                setCharacters(characters.filter(char => char.name !== characterName));\r\n            } else {\r\n                throw new Error('Failed to delete character');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting character:', error);\r\n            // Optionally, show an error message to the user\r\n        }\r\n    };\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"h4\" sx={{ mb: 2 }}>\r\n                Characters\r\n            </Typography>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"characters table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {characterTableAttributes.map((attr) => (\r\n                                <TableCell key={attr.title} align={attr.align}>\r\n                                    {attr.title}\r\n                                </TableCell>\r\n                            ))}\r\n                            <TableCell align=\"center\">Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {characters.map((character, index) => (\r\n                            <TableRow key={index}>\r\n                                {characterTableAttributes.map((attr) => (\r\n                                    <TableCell key={attr.title} align={attr.align}>\r\n                                        {attr.attributeDBName === 'imagePath' ? (\r\n                                            <img src={character[attr.attributeDBName]} alt={`Avatar of ${character.name}`} style={{ width: '70px', height: '70px' }} />\r\n                                        ) : (\r\n                                            character[attr.attributeDBName]\r\n                                        )}\r\n                                    </TableCell>\r\n                                ))}\r\n                                <TableCell align=\"center\">\r\n                                    <Button variant=\"outlined\" color=\"error\" onClick={() => handleDelete(character.name)}>\r\n                                        Delete\r\n                                    </Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {isEditing && (\r\n                <TextField\r\n                    label=\"Enter Character Name\"\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    onBlur={handleAddName}\r\n                    onKeyPress={(e) => e.key === 'Enter' && handleAddName()}\r\n                    fullWidth\r\n                    sx={{ mt: 2 }}\r\n                />\r\n            )}\r\n\r\n            <IconButton\r\n                onClick={() => setIsEditing(true)}\r\n                aria-label=\"add character\"\r\n                size=\"large\"\r\n                sx={{ fontSize: '3rem', mt: 2 }}\r\n            >\r\n                <AddIcon sx={{ fontSize: 'inherit' }} />\r\n            </IconButton>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default NameInputComponent;","import React, {useState, useEffect, Fragment} from 'react';\r\nimport API from '../../API_Interface/API_Interface'\r\n\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Divider from '@mui/material/Divider';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\n\r\nconst raidteamsTableAttributes = [\r\n    {\r\n        title: 'Raid Team ID',\r\n        attributeDBName: 'raidTeam_id',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Team Name',\r\n        attributeDBName: 'teamName',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Number of Players',\r\n        attributeDBName: 'numPlayers',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Players on the Bench',\r\n        attributeDBName: 'numBench',\r\n        align: 'left'\r\n    },\r\n    {\r\n        title: 'Trials',\r\n        attributeDBName: 'numTrials',\r\n        align: 'left'\r\n    },\r\n]; \r\n\r\nexport default function RaidTeamsComponent() {\r\n\r\n    const [userInput, setUserInput] = useState('');\r\n    const [verifyUser, setVerifyUser] = useState(false);\r\n    const [authFailed, setAuthFailed] = useState(false);\r\n    const [user, setUser] = useState(undefined);\r\n\r\n    const handleInputCharacter = event => {\r\n        console.log(\"handleInputCharacter called.\");\r\n\r\n        setUserInput(event.target.value);\r\n        setAuthFailed(false);\r\n\r\n        if(event.key === \"Submit\") {\r\n            console.log(\"handleKeyPress: Verify user input.\");\r\n            setVerifyUser(true);\r\n        }\r\n    };\r\n\r\n    const handleInputRaid = event => {\r\n        console.log(\"handleInputRaid called.\");\r\n\r\n        setUserInput(event.target.value);\r\n        setAuthFailed(false);\r\n\r\n        if(event.key === \"Submit\") {\r\n            console.log(\"handleKeyPress: Verify user input.\");\r\n            setVerifyUser(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n \r\n        if( ! verifyUser || userInput.length === 0)\r\n            return;\r\n\r\n        const api = new API();\r\n        async function getUserInfo() {\r\n            api.getUserInfo(userInput)\r\n                .then( userInfo => {\r\n                console.log(`api returns user info and it is: ${JSON.stringify(userInfo)}`);\r\n                const user = userInfo.user;\r\n                if( userInfo.status === \"OK\" ) {\r\n                    setUser(user);\r\n                } else  {\r\n                    setVerifyUser(false);\r\n                    setAuthFailed(true);\r\n                }\r\n            });\r\n        }\r\n\r\n        getUserInfo();\r\n    }, [verifyUser, setUser, userInput]);\r\n\r\n    const [raidteams, setRaidTeams] = useState([]);\r\n    console.log(`in AccountTable accounts contains is ${JSON.stringify(raidteams)}`);\r\n\r\n\r\n    useEffect(() => {\r\n        const api = new API();\r\n\r\n        async function getRaidTeams() {\r\n            const raidteamsJSONString = await api.allRaidTeams();\r\n            console.log(`raidteams from the DB ${JSON.stringify(raidteamsJSONString)}`);\r\n            setRaidTeams(raidteamsJSONString.data);\r\n        }\r\n\r\n        getRaidTeams();\r\n    }, []);\r\n    \r\n    const TRow = ({raidteamObject, onClick}) => {\r\n        return <TableRow\r\n            sx={{'&:last-child td, &:last-child th': {border: 0}}}\r\n        >\r\n            {\r\n                raidteamsTableAttributes.map((attr, idx) =>\r\n                    <TableCell key={idx} onClick={() => onClick(raidteamObject)}\r\n                               align={attr.align}>\r\n                        {\r\n                            raidteamObject[attr.attributeDBName]\r\n                        }\r\n                    </TableCell>)\r\n            }\r\n        </TableRow>\r\n    }\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Add a character to your raid using their character ID\r\n            </Typography> \r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" width=\"100%\" mt={10}>\r\n            <Typography component=\"h5\" variant=\"h5\">Enter Character Name</Typography> \r\n                <TextField\r\n                    error={authFailed}\r\n                    id=\"outlined-error-helper-text\"\r\n                    label=\"Character Name\"\r\n                    placeholder=\"\"\r\n                    fullwidth\r\n                    value={userInput}\r\n                    onChange={handleInputCharacter}\r\n                />\r\n                <Divider />\r\n                <Typography component=\"h5\" variant=\"h5\">Enter Raid Team Name</Typography>\r\n                <TextField\r\n                    error={authFailed}\r\n                    id=\"outlined-error-helper-text\"\r\n                    label=\"Raid Team Name\"\r\n                    placeholder=\"\"\r\n                    fullwidth\r\n                    value={userInput}\r\n                    onChange={handleInputRaid}\r\n                />\r\n                <Divider />\r\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" width=\"50%\" mt={4}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"medium\"\r\n                    sx={{ mt: 4, mb: 2 }}\r\n                    onClick={() => {setVerifyUser(true)}}\r\n                >Proceed</Button>\r\n                </Box>\r\n            </Box>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n            Here is a list of all members of your raid team.\r\n            </Typography> \r\n        {\r\n            raidteams.length > 0 &&\r\n                <TableContainer component={Paper}>\r\n                    <Table sx={{minWidth: 650}} aria-label=\"account table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {\r\n                                    raidteamsTableAttributes.map((attr, idx) =>\r\n                                        <TableCell  key={idx}\r\n                                                    align={attr.align}>\r\n                                            {attr.title}\r\n                                        </TableCell>)\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                raidteams.map((raidteam, idx) => (\r\n                                    <TRow raidteamObject={raidteam} key={idx}/>\r\n                                ))\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n        }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {Fragment} from 'react';\nimport Typography from '@mui/material/Typography';\n\nexport default function Markets(props) {\n    return (\n        <Fragment>\n            <Typography component=\"div\" variant='h3'>\n                Markets here\n            </Typography>\n        </Fragment>\n    )\n}\n","import React, {Fragment} from 'react';\nimport Typography from '@mui/material/Typography';\n\nexport default function Transactions(props) {\n    return (\n        <Fragment>\n            <Typography component=\"div\" variant='h3'>\n                Transations here\n            </Typography>\n        </Fragment>\n    )\n}\n","import React, {Fragment} from 'react';\nimport Typography from '@mui/material/Typography';\n\nimport { BarChart } from '@mui/x-charts/BarChart';\n\n\n\nexport default function Summary(props) {\n    return (\n        <Fragment>\n            <BarChart\n                series={[\n                    { data: [35, 44, 24, 34] },\n                    { data: [51, 6, 49, 30] },\n                    { data: [15, 25, 30, 50] },\n                    { data: [60, 50, 15, 25] },\n                ]}\n                height={290}\n                xAxis={[{ data: ['Q1', 'Q2', 'Q3', 'Q4'], scaleType: 'band' }]}\n                margin={{ top: 10, bottom: 30, left: 40, right: 10 }}\n                />\n            <Typography component=\"div\" variant='h3'>\n                Summary here\n            </Typography>\n        </Fragment>\n    )\n}\n","import Accounts from '../Components/Accounts/Accounts';\nimport Characters from '../Components/Characters/Characters';\nimport RaidTeams from '../Components/RaidTeams/RaidTeams';\nimport Markets from '../Components/Markets/Markets';\nimport Transactions from '../Components/Transactions/Transactions';\nimport Summary from '../Components/SummaryPage/Summary';\n\nconst presentationComponents = (props) => {\n    return [\n        {\n            title: 'Summary',\n            component: <Summary/>\n        },\n        {\n            title: 'Markets',\n            component: <Markets/>\n        },\n        {\n            title: 'Raid Team',\n            component: <RaidTeams/>\n        },\n        {\n            title: 'Account',\n            component: <Accounts/>\n        },\n        {\n            title: 'Add Character',\n            component: <Characters/>\n        },\n        {\n            title: 'Transactions',\n            component: <Transactions />\n        },\n    ];\n};\n\n\nconst containerComponents = (props) => {\n    return [\n        {\n            title: 'Activities',\n            component: <Transactions />\n        }\n    ];\n};\n\nexport {presentationComponents, containerComponents};\n","import React, {Fragment, useState} from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport {presentationComponents, containerComponents}  from './MenuPresentationComponents';\nimport Button from \"@mui/material/Button\";\n\nconst drawerWidth = 240;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: `-${drawerWidth}px`,\n        ...(open && {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        }),\n    }),\n);\n\nconst AppBar = styled(MuiAppBar, {shouldForwardProp: (prop) => prop !== 'open' })(\n    ({theme, open}) => ({\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        ...(open && {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: `${drawerWidth}px`,\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        }),\n    })\n);\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n}));\n\nconst TopBar = ({open, handleDrawerOpen, title, user, logoutAction}) => {\n    // This component is responsible for rendering the Toolbar that is drawn\n    // at the top of the drawer.\n\n    return (\n        <Fragment>\n            <AppBar position=\"fixed\" open={open} >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        sx={{ mr: 2, ...(open && { display: 'none' }) }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap component=\"div\">\n                        {title}\n                    </Typography>\n                    <Box width=\"100%\" justifyContent=\"center\" flex={1}>\n                        <Typography variant=\"h6\" noWrap component=\"div\" align=\"center\">\n                            {user}\n                        </Typography>\n                    </Box>\n                    <Box width=\"100%\" justifyContent=\"right\" flex={1}>\n                        <Typography variant=\"h7\" noWrap component=\"div\" align=\"right\" onClick={() => logoutAction()}>\n                            Logout\n                        </Typography>\n                    </Box>\n\n                </Toolbar>\n            </AppBar>\n        </Fragment>\n    )\n};\n\nconst PresentationListItems = (props) => {\n    return <div>\n        {\n            props.menuItemTitles.map(title =>\n                <ListItem button onClick={() => props.onClick(title)} key={title}>\n                    <ListItemText primary={title} key={title}/>\n                    {\n                        props.selectedItem === title && <ListItemIcon><ChevronRightIcon/></ListItemIcon>\n                    }\n                </ListItem>\n            )\n        }\n    </div>;\n};\n\nconst ContainerListItems = (props) => {\n    return  <div>\n        {\n            props.menuItemTitles.map(title =>\n                <ListItem button onClick={() => props.onClick(title)} key={title}>\n                    <ListItemText primary={title} key={title}/>\n                    {\n                        props.selectedItem === title && <ListItemIcon><ChevronRightIcon/></ListItemIcon>\n                    }\n                </ListItem>\n            )\n        }\n    </div>\n};\n\nconst findSelectedComponent = (selectedItem) => {\n    const component = [...presentationComponents(),\n                        ...containerComponents()].filter(comp => comp.title === selectedItem);\n    if(component.length === 1)\n        return component[0];\n\n    console.log(\"In findSelectedComponent of MakeEligible. Didn't find the component that corresponds to the menu item.\")\n    return {\n        title: null,\n        component: null\n    }\n};\n\nexport default function MainDraswer({title, user, logoutAction}) {\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const [selectedItem, setSelectedItem] = useState('Summary');\n\n    console.log('in MainDrawer');\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleSelectedItem = (title) => {\n        setSelectedItem(title)\n    };\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <CssBaseline />\n            <TopBar title={title} open={open} handleDrawerOpen={handleDrawerOpen} user={user} logoutAction={logoutAction} />\n            <Drawer\n                sx={{\n                    width: drawerWidth,\n                    flexShrink: 0,\n                    '& .MuiDrawer-paper': {\n                        width: drawerWidth,\n                        boxSizing: 'border-box',\n                    },\n                }}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n            >\n                <DrawerHeader>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </DrawerHeader>\n                <Divider />\n                <List>\n                    <PresentationListItems selectedItem={selectedItem}\n                                           onClick={handleSelectedItem}\n                                           menuItemTitles={presentationComponents().map(comp => comp.title)}\n                    />\n                </List>\n               \n            </Drawer>\n            <Main open={open}>\n                <DrawerHeader />\n                {findSelectedComponent(selectedItem).component}\n            </Main>\n        </Box>\n    );\n}","import {Fragment} from \"react\";\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport MainDrawer from './menu/MainDrawer';\n\nconst makeUserName = ({email, userName}) => {\n\n    return `${email} ${userName}`;\n};\n\nexport default function App({user, logoutAction}) {\n    const mainPageTitle = \"WoW-Teamz\";\n\n    return (\n                <MainDrawer title={mainPageTitle}\n                            user={makeUserName(user)}\n                            logoutAction={logoutAction}/>\n    )\n\n}\n\n","import React, { useState, useEffect } from \"react\";\r\nimport API from \"./API_Interface/API_Interface\";\r\nimport {\r\n  Avatar, Box, Button, Checkbox, CssBaseline, Divider, FormControlLabel,\r\n  Grid, Link, Paper, TextField, Typography, createTheme, ThemeProvider\r\n} from \"@mui/material\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Container from '@mui/material/Container';\r\n\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function SignUp({setSignupMode, setUser}) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [exist, setExist] = useState(true);\r\n  const [userCheck, setUserCheck] = useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    console.log('Submit Signup Called');\r\n    setUserCheck(true);\r\n  };\r\n\r\n  const handleSignin = () => {\r\n    console.log('Signin called');\r\n    setSignupMode(false);\r\n  };\r\n\r\n  // ADD TO DATABASE \r\n\r\n  useEffect(() => {\r\n    if (email.length === 0 || userName.length === 0 || password.length === 0) return;\r\n    const api = new API();\r\n    async function insertNewUser() {\r\n        api.insertNewUser(userName, email, password)\r\n        .then( userInfo => {\r\n        console.log(`API returns user info and it is: ${JSON.stringify(userInfo)}`);\r\n        const user = userInfo.data.user;\r\n        console.log(\"BELOW IS USER\");\r\n        console.log(user);\r\n        if (userInfo.data.status === \"OK\") {\r\n          window.alert(\"Signup Sucessful, Thank you for signing up!\");\r\n          setUser(user);\r\n          setExist(false);\r\n          setSignupMode(false);\r\n        } else {\r\n          window.alert(\"Signup Not Sucessful\");\r\n        }\r\n      });\r\n    }\r\n\r\n    insertNewUser();\r\n  }, [exist]);\r\n\r\n  // CHECK FOR USER\r\n\r\n  useEffect(() => {\r\n    if (email.length === 0) return;\r\n    const api = new API();\r\n    async function checkUserEmail() {\r\n        api.checkUserEmail(email)\r\n        .then( userInfo => {\r\n        console.log(`API returns user info and it is: ${JSON.stringify(userInfo.data.user)}`);\r\n        const user = userInfo.data.user;\r\n        console.log(\"BELOW IS USER\");\r\n        console.log(user);\r\n        \r\n          console.log(\"USER IS NOT FOUND, PROCEED WITH SIGNUP\");\r\n          setUserCheck(false);\r\n      });\r\n    }\r\n\r\n    checkUserEmail();\r\n  }, [userCheck]);\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box component=\"form\" sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"userName\"\r\n                  label=\"User Name\"\r\n                  name=\"userName\"\r\n                  value={userName}\r\n                  onChange={(u) => setUserName(u.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  value={password}\r\n                  onChange={(p) => setPassword(p.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={handleSubmit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link variant=\"body2\" onClick={handleSignin} >\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        \r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}","import React, { Fragment, useState } from 'react';\nimport Login from './Login';\nimport App from './App';\nimport Signup from './Signup';\n\nexport default function Main() {\n    const [user, setUser] = useState(undefined);\n    const [signupMode, setSignupMode] = useState(false);\n\n    const logout = (setUser) => {\n        return () => {\n            setUser(undefined);\n        }\n    };\n\n    \n\n    return (\n        <Fragment>\n            {\n                user !== undefined ? (\n                    <App user={user} logoutAction={logout(setUser)} />\n                ) : (\n                    signupMode ? (\n                        <Signup user={user} setUser={setUser} setSignupMode={setSignupMode}/>\n                    ) : (\n                        <Login user={user} setUser={setUser} setSignupMode={setSignupMode} />\n                    )\n                )\n            }\n        </Fragment>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}